(window.webpackJsonp=window.webpackJsonp||[]).push([[3],{"./.storybook/preview.ts-generated-config-entry.js":function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__);var preview_namespaceObject={};__webpack_require__.r(preview_namespaceObject),__webpack_require__.d(preview_namespaceObject,"parameters",(function(){return parameters}));__webpack_require__("./node_modules/core-js/modules/es.object.keys.js"),__webpack_require__("./node_modules/core-js/modules/es.symbol.js"),__webpack_require__("./node_modules/core-js/modules/es.array.filter.js"),__webpack_require__("./node_modules/core-js/modules/es.object.get-own-property-descriptor.js"),__webpack_require__("./node_modules/core-js/modules/es.array.for-each.js"),__webpack_require__("./node_modules/core-js/modules/web.dom-collections.for-each.js"),__webpack_require__("./node_modules/core-js/modules/es.object.get-own-property-descriptors.js"),__webpack_require__("./node_modules/core-js/modules/es.object.define-properties.js"),__webpack_require__("./node_modules/core-js/modules/es.object.define-property.js");var ClientApi=__webpack_require__("./node_modules/@storybook/client-api/dist/esm/ClientApi.js"),esm=__webpack_require__("./node_modules/@storybook/client-logger/dist/esm/index.js"),parameters={viewMode:"docs",actions:{argTypesRegex:"^on[A-Z].*"},controls:{matchers:{color:/(background|color)$/i,date:/Date$/}}};function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);enumerableOnly&&(symbols=symbols.filter((function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable}))),keys.push.apply(keys,symbols)}return keys}function _defineProperty(obj,key,value){return key in obj?Object.defineProperty(obj,key,{value:value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}Object.keys(preview_namespaceObject).forEach((function(key){var value=preview_namespaceObject[key];switch(key){case"args":case"argTypes":return esm.a.warn("Invalid args/argTypes in config, ignoring.",JSON.stringify(value));case"decorators":return value.forEach((function(decorator){return Object(ClientApi.d)(decorator,!1)}));case"loaders":return value.forEach((function(loader){return Object(ClientApi.e)(loader,!1)}));case"parameters":return Object(ClientApi.f)(function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=null!=arguments[i]?arguments[i]:{};i%2?ownKeys(Object(source),!0).forEach((function(key){_defineProperty(target,key,source[key])})):Object.getOwnPropertyDescriptors?Object.defineProperties(target,Object.getOwnPropertyDescriptors(source)):ownKeys(Object(source)).forEach((function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key))}))}return target}({},value),!1);case"argTypesEnhancers":return value.forEach((function(enhancer){return Object(ClientApi.b)(enhancer)}));case"argsEnhancers":return value.forEach((function(enhancer){return Object(ClientApi.c)(enhancer)}));case"render":return Object(ClientApi.g)(value);case"globals":case"globalTypes":var v={};return v[key]=value,Object(ClientApi.f)(v,!1);case"decorateStory":case"renderToDOM":return null;default:return console.log(key+" was not supported :( !")}}))},"./generated-stories-entry.js":function(module,exports,__webpack_require__){"use strict";(function(module){(0,__webpack_require__("./node_modules/@storybook/react/dist/esm/client/index.js").configure)([__webpack_require__("./stories sync recursive ^\\.(?:(?:^|\\/|(?:(?:(?!(?:^|\\/)\\.).)*?)\\/)(?!\\.)(?=.)[^/]*?\\.stories\\.mdx)$"),__webpack_require__("./stories sync recursive ^\\.(?:(?:^|\\/|(?:(?:(?!(?:^|\\/)\\.).)*?)\\/)(?!\\.)(?=.)[^/]*?\\.stories\\.(js|jsx|ts|tsx))$")],module,!1)}).call(this,__webpack_require__("./node_modules/webpack/buildin/module.js")(module))},"./node_modules/css-loader/dist/cjs.js!./node_modules/less-loader/dist/cjs.js?!./src/components/style/map-pin.less":function(module,exports,__webpack_require__){(exports=__webpack_require__("./node_modules/css-loader/dist/runtime/api.js")(!1)).push([module.i,".ant-map-pin {\n  fill: #40a9ff;\n}\n",""]),module.exports=exports},"./node_modules/css-loader/dist/cjs.js!./node_modules/less-loader/dist/cjs.js?!./src/components/style/map-view.less":function(module,exports,__webpack_require__){(exports=__webpack_require__("./node_modules/css-loader/dist/runtime/api.js")(!1)).push([module.i,".mapboxgl-map .mapboxgl-ctrl-logo {\n  opacity: 0.5;\n}\n.mapboxgl-map .mapboxgl-ctrl.mapboxgl-ctrl-attrib {\n  opacity: 0.5;\n  font-size: 12px;\n}\n.mapboxgl-map .mapbox-improve-map {\n  display: none;\n}\n",""]),module.exports=exports},"./node_modules/css-loader/dist/cjs.js!./node_modules/less-loader/dist/cjs.js?!./src/components/style/place-picker.less":function(module,exports,__webpack_require__){(exports=__webpack_require__("./node_modules/css-loader/dist/runtime/api.js")(!1)).push([module.i,".ant-place-picker {\n  justify-content: flex-end;\n  align-items: stretch;\n}\n.ant-place-picker .ant-place-select {\n  margin-bottom: 12px;\n}\n.ant-place-picker-map-view {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  background: #eee9e0;\n  height: 300px;\n  width: 100%;\n  border-radius: 2px;\n  overflow: hidden;\n}\n",""]),module.exports=exports},"./node_modules/css-loader/dist/cjs.js!./node_modules/less-loader/dist/cjs.js?!./src/components/style/place-select.less":function(module,exports,__webpack_require__){(exports=__webpack_require__("./node_modules/css-loader/dist/runtime/api.js")(!1)).push([module.i,".ant-place-select {\n  display: inline-block;\n}\n",""]),module.exports=exports},"./node_modules/css-loader/dist/cjs.js!./node_modules/less-loader/dist/cjs.js?!./stories/style/reset.less":function(module,exports,__webpack_require__){(exports=__webpack_require__("./node_modules/css-loader/dist/runtime/api.js")(!1)).push([module.i,"/*\n  1. Use a more-intuitive box-sizing model.\n*/\n*,\n*::before,\n*::after {\n  box-sizing: border-box;\n}\n/*\n  2. Remove default margin\n*/\n* {\n  margin: 0;\n}\n/*\n  3. Allow percentage-based heights in the application\n*/\nhtml,\nbody,\n#root {\n  height: 100%;\n}\n/*\n  Typographic tweaks!\n  4. Add accessible line-height\n  5. Improve text rendering\n*/\nbody {\n  line-height: 1.5;\n  -webkit-font-smoothing: antialiased;\n}\n/*\n  6. Improve media defaults\n*/\nimg,\npicture,\nvideo,\ncanvas,\nsvg {\n  display: block;\n  max-width: 100%;\n}\n/*\n  7. Remove built-in form typography styles\n*/\ninput,\nbutton,\ntextarea,\nselect {\n  font: inherit;\n}\n/*\n  8. Avoid text overflows\n*/\np,\nh1,\nh2,\nh3,\nh4,\nh5,\nh6 {\n  overflow-wrap: break-word;\n}\n/*\n  9. Create a root stacking context\n*/\n#root {\n  isolation: isolate;\n}\n",""]),module.exports=exports},"./src/components/index.ts":function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.d(__webpack_exports__,"a",(function(){return MapPin_MapPin})),__webpack_require__.d(__webpack_exports__,"b",(function(){return MapView})),__webpack_require__.d(__webpack_exports__,"c",(function(){return PlacePicker_PlacePicker})),__webpack_require__.d(__webpack_exports__,"d",(function(){return PlaceSelect_PlaceSelect}));__webpack_require__("./node_modules/core-js/modules/es.object.assign.js");var classnames=__webpack_require__("./node_modules/classnames/index.js"),classnames_default=__webpack_require__.n(classnames),react=__webpack_require__("./node_modules/react/index.js"),jsx_runtime=(__webpack_require__("./src/components/style/map-pin.less"),__webpack_require__("./node_modules/react/jsx-runtime.js")),MapPin_MapPin=function MapPin(_ref){var className=_ref.className,_ref$style=_ref.style,styleProp=void 0===_ref$style?{}:_ref$style,_ref$size=_ref.size,size=void 0===_ref$size?64:_ref$size,style=_ref.centered?Object.assign({},styleProp,{transform:"translate("+-size/2+"px,"+-size+"px)"}):styleProp;return Object(jsx_runtime.jsxs)("svg",{className:classnames_default()("ant-map-pin",className),height:size,width:size,viewBox:"0 0 24 24",style:style,children:[Object(jsx_runtime.jsx)("path",{d:"M20.2,15.7L20.2,15.7c1.1-1.6,1.8-3.6,1.8-5.7c0-5.6-4.5-10-10-10S2,4.5,2,10c0,2,0.6,3.9,1.6,5.4c0,0.1,0.1,0.2,0.2,0.3\n  c0,0,0.1,0.1,0.1,0.2c0.2,0.3,0.4,0.6,0.7,0.9c2.6,3.1,7.4,7.6,7.4,7.6s4.8-4.5,7.4-7.5c0.2-0.3,0.5-0.6,0.7-0.9\n  C20.1,15.8,20.2,15.8,20.2,15.7z"}),Object(jsx_runtime.jsx)("ellipse",{ry:"4",rx:"4",cy:"10",cx:"12",fill:"#ffffff"})]})};MapPin_MapPin.displayName="MapPin";try{MapPin_MapPin.displayName="MapPin",MapPin_MapPin.__docgenInfo={description:"",displayName:"MapPin",props:{centered:{defaultValue:null,description:"",name:"centered",required:!1,type:{name:"boolean"}},size:{defaultValue:{value:"64"},description:"",name:"size",required:!1,type:{name:"number"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/MapPin.tsx#MapPin"]={docgenInfo:MapPin_MapPin.__docgenInfo,name:"MapPin",path:"src/components/MapPin.tsx#MapPin"})}catch(__react_docgen_typescript_loader_error){}__webpack_require__("./node_modules/core-js/modules/es.object.keys.js"),__webpack_require__("./node_modules/core-js/modules/es.array.index-of.js"),__webpack_require__("./node_modules/core-js/modules/es.symbol.js"),__webpack_require__("./node_modules/core-js/modules/es.array.is-array.js"),__webpack_require__("./node_modules/core-js/modules/es.symbol.description.js"),__webpack_require__("./node_modules/core-js/modules/es.object.to-string.js"),__webpack_require__("./node_modules/core-js/modules/es.symbol.iterator.js"),__webpack_require__("./node_modules/core-js/modules/es.string.iterator.js"),__webpack_require__("./node_modules/core-js/modules/es.array.iterator.js"),__webpack_require__("./node_modules/core-js/modules/web.dom-collections.iterator.js"),__webpack_require__("./node_modules/core-js/modules/es.array.slice.js"),__webpack_require__("./node_modules/core-js/modules/es.function.name.js"),__webpack_require__("./node_modules/core-js/modules/es.array.from.js");var esm=__webpack_require__("./node_modules/react-map-gl/dist/esm/index.js"),globalDefaults_accessToken="",placeSelectDefaults={countries:["FR"],language:["fr-FR"],proximity:[2.349014,48.864716],limit:5},mapViewDefaults={locale:"fr",mapStyle:"mapbox://styles/mapbox/streets-v11",defaultViewport:{latitude:48.864716,longitude:2.349014,zoom:10}},_excluded=(__webpack_require__("./src/components/style/map-view.less"),["accessToken","locale","mapStyle","defaultViewport","onLoad","viewport","flyMode","width","height"]);function _slicedToArray(arr,i){return function _arrayWithHoles(arr){if(Array.isArray(arr))return arr}(arr)||function _iterableToArrayLimit(arr,i){var _i=null==arr?null:"undefined"!=typeof Symbol&&arr[Symbol.iterator]||arr["@@iterator"];if(null==_i)return;var _s,_e,_arr=[],_n=!0,_d=!1;try{for(_i=_i.call(arr);!(_n=(_s=_i.next()).done)&&(_arr.push(_s.value),!i||_arr.length!==i);_n=!0);}catch(err){_d=!0,_e=err}finally{try{_n||null==_i.return||_i.return()}finally{if(_d)throw _e}}return _arr}(arr,i)||function _unsupportedIterableToArray(o,minLen){if(!o)return;if("string"==typeof o)return _arrayLikeToArray(o,minLen);var n=Object.prototype.toString.call(o).slice(8,-1);"Object"===n&&o.constructor&&(n=o.constructor.name);if("Map"===n||"Set"===n)return Array.from(o);if("Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return _arrayLikeToArray(o,minLen)}(arr,i)||function _nonIterableRest(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function _arrayLikeToArray(arr,len){(null==len||len>arr.length)&&(len=arr.length);for(var i=0,arr2=new Array(len);i<len;i++)arr2[i]=arr[i];return arr2}function _objectWithoutProperties(source,excluded){if(null==source)return{};var key,i,target=function _objectWithoutPropertiesLoose(source,excluded){if(null==source)return{};var key,i,target={},sourceKeys=Object.keys(source);for(i=0;i<sourceKeys.length;i++)key=sourceKeys[i],excluded.indexOf(key)>=0||(target[key]=source[key]);return target}(source,excluded);if(Object.getOwnPropertySymbols){var sourceSymbolKeys=Object.getOwnPropertySymbols(source);for(i=0;i<sourceSymbolKeys.length;i++)key=sourceSymbolKeys[i],excluded.indexOf(key)>=0||Object.prototype.propertyIsEnumerable.call(source,key)&&(target[key]=source[key])}return target}var MapView_MapViewRenderFunction=function MapViewRenderFunction(_ref,ref){var _ref$accessToken=_ref.accessToken,accessToken=void 0===_ref$accessToken?globalDefaults_accessToken:_ref$accessToken,_ref$locale=_ref.locale,locale=void 0===_ref$locale?mapViewDefaults.locale:_ref$locale,_ref$mapStyle=_ref.mapStyle,mapStyle=void 0===_ref$mapStyle?mapViewDefaults.mapStyle:_ref$mapStyle,_ref$defaultViewport=_ref.defaultViewport,defaultViewport=void 0===_ref$defaultViewport?mapViewDefaults.defaultViewport:_ref$defaultViewport,onLoad=_ref.onLoad,propViewport=_ref.viewport,_ref$flyMode=_ref.flyMode,flyMode=void 0===_ref$flyMode||_ref$flyMode,_ref$width=_ref.width,width=void 0===_ref$width?"100%":_ref$width,_ref$height=_ref.height,height=void 0===_ref$height?"100%":_ref$height,otherProps=_objectWithoutProperties(_ref,_excluded),_useState2=_slicedToArray(Object(react.useState)(propViewport||defaultViewport),2),viewport=_useState2[0],setViewport=_useState2[1],_useState4=_slicedToArray(Object(react.useState)(!!propViewport),2),showMapPin=_useState4[0],setShowMapPin=_useState4[1],mapRef=Object(react.useRef)(null);Object(react.useImperativeHandle)(ref,(function(){return mapRef.current}));var setLocale=Object(react.useCallback)((function(){if(mapRef.current){var map=mapRef.current.getMap();map.setLayoutProperty("country-label","text-field",["get","name_"+locale]),map.setLayoutProperty("poi-label","text-field",["get","name_"+locale]),map.setLayoutProperty("settlement-label","text-field",["get","name_"+locale]),map.setLayoutProperty("settlement-subdivision-label","text-field",["get","name_"+locale])}}),[locale]),handleLoad=Object(react.useCallback)((function(event){setLocale(),onLoad&&onLoad(event)}),[onLoad,setLocale]);return Object(react.useEffect)((function(){if(mapRef.current&&propViewport){var map=mapRef.current.getMap(),latitude=propViewport.latitude,cameraOptions={center:[propViewport.longitude,latitude],zoom:propViewport.zoom};map.once("moveend",(function(){setViewport(propViewport),setShowMapPin(!0)})),setShowMapPin(!1),map[flyMode?"flyTo":"jumpTo"](cameraOptions)}}),[propViewport,flyMode]),Object(jsx_runtime.jsx)(esm.a,Object.assign({ref:mapRef,mapboxApiAccessToken:accessToken,mapStyle:mapStyle,onLoad:handleLoad,onViewportChange:setViewport,width:width,height:height},otherProps,viewport,{children:showMapPin&&propViewport?Object(jsx_runtime.jsx)(esm.b,{longitude:propViewport.longitude,latitude:propViewport.latitude,children:Object(jsx_runtime.jsx)(MapPin_MapPin,{centered:!0,size:32})}):null}))};MapView_MapViewRenderFunction.displayName="MapViewRenderFunction";var MapView=Object(react.forwardRef)(MapView_MapViewRenderFunction);try{MapView.displayName="MapView",MapView.__docgenInfo={description:"",displayName:"MapView",props:{className:{defaultValue:null,description:"",name:"className",required:!1,type:{name:"string"}},height:{defaultValue:{value:"100%"},description:"",name:"height",required:!1,type:{name:"string | number"}},style:{defaultValue:null,description:"",name:"style",required:!1,type:{name:"any"}},width:{defaultValue:{value:"100%"},description:"",name:"width",required:!1,type:{name:"string | number"}},onLoad:{defaultValue:null,description:"",name:"onLoad",required:!1,type:{name:"((event: MapLoadEvent) => void)"}},onError:{defaultValue:null,description:"",name:"onError",required:!1,type:{name:"((e: MapError) => void)"}},onClick:{defaultValue:null,description:"",name:"onClick",required:!1,type:{name:"((evt: MapEvent) => void)"}},onContextMenu:{defaultValue:null,description:"",name:"onContextMenu",required:!1,type:{name:"((evt: MapEvent) => void)"}},onMouseDown:{defaultValue:null,description:"",name:"onMouseDown",required:!1,type:{name:"((evt: MapEvent) => void)"}},onMouseEnter:{defaultValue:null,description:"",name:"onMouseEnter",required:!1,type:{name:"((evt: MapEvent) => void)"}},onMouseLeave:{defaultValue:null,description:"",name:"onMouseLeave",required:!1,type:{name:"((evt: MapEvent) => void)"}},onMouseMove:{defaultValue:null,description:"",name:"onMouseMove",required:!1,type:{name:"((evt: MapEvent) => void)"}},onMouseOut:{defaultValue:null,description:"",name:"onMouseOut",required:!1,type:{name:"((evt: MapEvent) => void)"}},onMouseUp:{defaultValue:null,description:"",name:"onMouseUp",required:!1,type:{name:"((evt: MapEvent) => void)"}},onTouchEnd:{defaultValue:null,description:"",name:"onTouchEnd",required:!1,type:{name:"((evt: MapEvent) => void)"}},onTouchMove:{defaultValue:null,description:"",name:"onTouchMove",required:!1,type:{name:"((evt: MapEvent) => void)"}},onTouchStart:{defaultValue:null,description:"",name:"onTouchStart",required:!1,type:{name:"((evt: MapEvent) => void)"}},onWheel:{defaultValue:null,description:"",name:"onWheel",required:!1,type:{name:"((evt: MapEvent) => void)"}},onTransitionEnd:{defaultValue:null,description:"",name:"onTransitionEnd",required:!1,type:{name:"(() => void)"}},accessToken:{defaultValue:{value:""},description:"",name:"accessToken",required:!1,type:{name:"string"}},locale:{defaultValue:{value:"mapViewDefaults.locale"},description:"",name:"locale",required:!1,type:{name:"string"}},mapboxgl:{defaultValue:null,description:"",name:"mapboxgl",required:!1,type:{name:"any"}},container:{defaultValue:null,description:"",name:"container",required:!1,type:{name:"any"}},gl:{defaultValue:null,description:"",name:"gl",required:!1,type:{name:"any"}},mapboxApiAccessToken:{defaultValue:null,description:"",name:"mapboxApiAccessToken",required:!1,type:{name:"string"}},mapboxApiUrl:{defaultValue:null,description:"",name:"mapboxApiUrl",required:!1,type:{name:"string"}},attributionControl:{defaultValue:null,description:"",name:"attributionControl",required:!1,type:{name:"boolean"}},preserveDrawingBuffer:{defaultValue:null,description:"",name:"preserveDrawingBuffer",required:!1,type:{name:"boolean"}},reuseMaps:{defaultValue:null,description:"",name:"reuseMaps",required:!1,type:{name:"boolean"}},transformRequest:{defaultValue:null,description:"",name:"transformRequest",required:!1,type:{name:"((url?: string, resourceType?: string) => MapRequest) | undefined"}},mapStyle:{defaultValue:{value:"mapViewDefaults.mapStyle"},description:"",name:"mapStyle",required:!1,type:{name:"any"}},preventStyleDiffing:{defaultValue:null,description:"",name:"preventStyleDiffing",required:!1,type:{name:"boolean"}},visible:{defaultValue:null,description:"",name:"visible",required:!1,type:{name:"boolean"}},asyncRender:{defaultValue:null,description:"",name:"asyncRender",required:!1,type:{name:"boolean"}},viewState:{defaultValue:null,description:"",name:"viewState",required:!1,type:{name:"ViewState"}},bearing:{defaultValue:null,description:"",name:"bearing",required:!1,type:{name:"number"}},pitch:{defaultValue:null,description:"",name:"pitch",required:!1,type:{name:"number"}},altitude:{defaultValue:null,description:"",name:"altitude",required:!1,type:{name:"number"}},mapOptions:{defaultValue:null,description:"",name:"mapOptions",required:!1,type:{name:'Omit<MapboxOptions, "container">'}},disableTokenWarning:{defaultValue:null,description:"",name:"disableTokenWarning",required:!1,type:{name:"boolean"}},visibilityConstraints:{defaultValue:null,description:"",name:"visibilityConstraints",required:!1,type:{name:"{ minZoom?: number; maxZoom?: number; minPitch?: number | undefined; maxPitch?: number | undefined; } | undefined"}},onResize:{defaultValue:null,description:"",name:"onResize",required:!1,type:{name:"((dimensions: { width: number; height: number; }) => void)"}},onViewStateChange:{defaultValue:null,description:"",name:"onViewStateChange",required:!1,type:{name:"Function"}},onViewportChange:{defaultValue:null,description:"",name:"onViewportChange",required:!1,type:{name:"Function"}},onInteractionStateChange:{defaultValue:null,description:"",name:"onInteractionStateChange",required:!1,type:{name:"Function"}},onHover:{defaultValue:null,description:"",name:"onHover",required:!1,type:{name:"((evt: MapEvent) => void)"}},onNativeClick:{defaultValue:null,description:"",name:"onNativeClick",required:!1,type:{name:"((evt: MapEvent) => void)"}},onDblClick:{defaultValue:null,description:"",name:"onDblClick",required:!1,type:{name:"((evt: MapEvent) => void)"}},transitionDuration:{defaultValue:null,description:"",name:"transitionDuration",required:!1,type:{name:'number | "auto"'}},transitionInterpolator:{defaultValue:null,description:"",name:"transitionInterpolator",required:!1,type:{name:"any"}},transitionInterruption:{defaultValue:null,description:"",name:"transitionInterruption",required:!1,type:{name:"enum",value:[{value:"1"},{value:"2"},{value:"3"},{value:"4"}]}},transitionEasing:{defaultValue:null,description:"",name:"transitionEasing",required:!1,type:{name:"EasingFunction"}},onTransitionStart:{defaultValue:null,description:"",name:"onTransitionStart",required:!1,type:{name:"(() => void)"}},onTransitionInterrupt:{defaultValue:null,description:"",name:"onTransitionInterrupt",required:!1,type:{name:"(() => void)"}},scrollZoom:{defaultValue:null,description:"",name:"scrollZoom",required:!1,type:{name:"boolean | { speed?: number; smooth?: boolean; } | undefined"}},dragPan:{defaultValue:null,description:"",name:"dragPan",required:!1,type:{name:"boolean | { inertia?: number; }"}},dragRotate:{defaultValue:null,description:"",name:"dragRotate",required:!1,type:{name:"boolean | { inertia?: number; }"}},doubleClickZoom:{defaultValue:null,description:"",name:"doubleClickZoom",required:!1,type:{name:"boolean"}},touchZoom:{defaultValue:null,description:"",name:"touchZoom",required:!1,type:{name:"boolean | { inertia?: number; }"}},touchRotate:{defaultValue:null,description:"",name:"touchRotate",required:!1,type:{name:"boolean | { inertia?: number; }"}},keyboard:{defaultValue:null,description:"",name:"keyboard",required:!1,type:{name:"boolean | { zoomSpeed?: number; moveSpeed?: number; rotateSpeedX?: number | undefined; rotateSpeedY?: number | undefined; } | undefined"}},touchAction:{defaultValue:null,description:"",name:"touchAction",required:!1,type:{name:"string"}},eventRecognizerOptions:{defaultValue:null,description:"",name:"eventRecognizerOptions",required:!1,type:{name:"any"}},clickRadius:{defaultValue:null,description:"",name:"clickRadius",required:!1,type:{name:"number"}},interactiveLayerIds:{defaultValue:null,description:"",name:"interactiveLayerIds",required:!1,type:{name:"string[]"}},getCursor:{defaultValue:null,description:"",name:"getCursor",required:!1,type:{name:"((state: ExtraState) => string)"}},controller:{defaultValue:null,description:"",name:"controller",required:!1,type:{name:"MapController"}},maxZoom:{defaultValue:null,description:"",name:"maxZoom",required:!1,type:{name:"number"}},minZoom:{defaultValue:null,description:"",name:"minZoom",required:!1,type:{name:"number"}},maxPitch:{defaultValue:null,description:"",name:"maxPitch",required:!1,type:{name:"number"}},minPitch:{defaultValue:null,description:"",name:"minPitch",required:!1,type:{name:"number"}},viewport:{defaultValue:null,description:"",name:"viewport",required:!1,type:{name:"ViewState | null"}},defaultViewport:{defaultValue:{value:"mapViewDefaults.defaultViewport"},description:"",name:"defaultViewport",required:!1,type:{name:"ViewState | null"}},flyMode:{defaultValue:{value:"true"},description:"",name:"flyMode",required:!1,type:{name:"boolean"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/MapView.tsx#MapView"]={docgenInfo:MapView.__docgenInfo,name:"MapView",path:"src/components/MapView.tsx#MapView"})}catch(__react_docgen_typescript_loader_error){}__webpack_require__("./node_modules/antd/lib/spin/style/index.js");var spin=__webpack_require__("./node_modules/antd/lib/spin/index.js"),spin_default=__webpack_require__.n(spin),geocoding=(__webpack_require__("./node_modules/core-js/modules/web.timers.js"),__webpack_require__("./node_modules/core-js/modules/es.array.find.js"),__webpack_require__("./node_modules/core-js/modules/es.promise.js"),__webpack_require__("./node_modules/core-js/modules/es.array.map.js"),__webpack_require__("./node_modules/core-js/modules/es.array.some.js"),__webpack_require__("./node_modules/@mapbox/mapbox-sdk/services/geocoding.js")),geocoding_default=__webpack_require__.n(geocoding),lib_select=__webpack_require__("./node_modules/antd/lib/select/index.js"),select_default=__webpack_require__.n(lib_select);__webpack_require__("./node_modules/antd/lib/select/style/index.less");function useDebounce(callback,wait){var debounced=Object(react.useMemo)((function(){return function debounce(func,wait){var timer=null;return Object.assign((function(){for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++)args[_key]=arguments[_key];timer&&clearTimeout(timer),timer=setTimeout((function(){timer=null,func.apply(void 0,args)}),wait)}),{cancel:function cancel(){timer&&clearTimeout(timer)}})}(callback,wait)}),[callback,wait]);return Object(react.useEffect)((function(){return function(){debounced.cancel()}}),[debounced]),Object(react.useEffect)((function(){debounced.cancel()}),[debounced,callback,wait]),debounced}__webpack_require__("./src/components/style/place-select.less");var PlaceSelect_excluded=["className","value","onChange","onFeatureSelect","accessToken","countries","language","proximity","limit"];function asyncGeneratorStep(gen,resolve,reject,_next,_throw,key,arg){try{var info=gen[key](arg),value=info.value}catch(error){return void reject(error)}info.done?resolve(value):Promise.resolve(value).then(_next,_throw)}function _asyncToGenerator(fn){return function(){var self=this,args=arguments;return new Promise((function(resolve,reject){var gen=fn.apply(self,args);function _next(value){asyncGeneratorStep(gen,resolve,reject,_next,_throw,"next",value)}function _throw(err){asyncGeneratorStep(gen,resolve,reject,_next,_throw,"throw",err)}_next(void 0)}))}}function PlaceSelect_slicedToArray(arr,i){return function PlaceSelect_arrayWithHoles(arr){if(Array.isArray(arr))return arr}(arr)||function PlaceSelect_iterableToArrayLimit(arr,i){var _i=null==arr?null:"undefined"!=typeof Symbol&&arr[Symbol.iterator]||arr["@@iterator"];if(null==_i)return;var _s,_e,_arr=[],_n=!0,_d=!1;try{for(_i=_i.call(arr);!(_n=(_s=_i.next()).done)&&(_arr.push(_s.value),!i||_arr.length!==i);_n=!0);}catch(err){_d=!0,_e=err}finally{try{_n||null==_i.return||_i.return()}finally{if(_d)throw _e}}return _arr}(arr,i)||function PlaceSelect_unsupportedIterableToArray(o,minLen){if(!o)return;if("string"==typeof o)return PlaceSelect_arrayLikeToArray(o,minLen);var n=Object.prototype.toString.call(o).slice(8,-1);"Object"===n&&o.constructor&&(n=o.constructor.name);if("Map"===n||"Set"===n)return Array.from(o);if("Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return PlaceSelect_arrayLikeToArray(o,minLen)}(arr,i)||function PlaceSelect_nonIterableRest(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function PlaceSelect_arrayLikeToArray(arr,len){(null==len||len>arr.length)&&(len=arr.length);for(var i=0,arr2=new Array(len);i<len;i++)arr2[i]=arr[i];return arr2}function PlaceSelect_objectWithoutProperties(source,excluded){if(null==source)return{};var key,i,target=function PlaceSelect_objectWithoutPropertiesLoose(source,excluded){if(null==source)return{};var key,i,target={},sourceKeys=Object.keys(source);for(i=0;i<sourceKeys.length;i++)key=sourceKeys[i],excluded.indexOf(key)>=0||(target[key]=source[key]);return target}(source,excluded);if(Object.getOwnPropertySymbols){var sourceSymbolKeys=Object.getOwnPropertySymbols(source);for(i=0;i<sourceSymbolKeys.length;i++)key=sourceSymbolKeys[i],excluded.indexOf(key)>=0||Object.prototype.propertyIsEnumerable.call(source,key)&&(target[key]=source[key])}return target}var PlaceSelect_PlaceSelect=function PlaceSelect(_ref){var className=_ref.className,value=_ref.value,onChange=_ref.onChange,onFeatureSelect=_ref.onFeatureSelect,_ref$accessToken=_ref.accessToken,accessToken=void 0===_ref$accessToken?globalDefaults_accessToken:_ref$accessToken,_ref$countries=_ref.countries,countries=void 0===_ref$countries?placeSelectDefaults.countries:_ref$countries,_ref$language=_ref.language,language=void 0===_ref$language?placeSelectDefaults.language:_ref$language,_ref$proximity=_ref.proximity,proximity=void 0===_ref$proximity?placeSelectDefaults.proximity:_ref$proximity,_ref$limit=_ref.limit,limit=void 0===_ref$limit?placeSelectDefaults.limit:_ref$limit,otherProps=PlaceSelect_objectWithoutProperties(_ref,PlaceSelect_excluded),_useState2=PlaceSelect_slicedToArray(Object(react.useState)([]),2),options=_useState2[0],setOptions=_useState2[1],_useState4=PlaceSelect_slicedToArray(Object(react.useState)(!1),2),isSearching=_useState4[0],setIsSearching=_useState4[1],geocodingService=Object(react.useRef)(geocoding_default()({accessToken:accessToken})).current,latestFeatures=Object(react.useRef)([]),isMounted=function useIsMounted(){var isMounted=Object(react.useRef)(!1);return Object(react.useEffect)((function(){return isMounted.current=!0,function(){isMounted.current=!1}}),[]),Object(react.useCallback)((function(){return isMounted.current}),[isMounted])}(),handleSelect=Object(react.useCallback)((function(value,option){var feature=latestFeatures.current.find((function(feature){return feature.id===value}));if(!feature)throw new Error('Unexpected missing feature with id="'+value+'"');setIsSearching(!1),onFeatureSelect&&onFeatureSelect(feature),onChange&&onChange(feature.place_name,option)}),[onFeatureSelect,onChange]),handleSearch=Object(react.useCallback)(function(){var _ref2=_asyncToGenerator(regeneratorRuntime.mark((function _callee(searchValue){var _yield$geocodingServi,body,features;return regeneratorRuntime.wrap((function _callee$(_context){for(;;)switch(_context.prev=_context.next){case 0:if(searchValue){_context.next=2;break}return _context.abrupt("return");case 2:return setIsSearching(!0),_context.next=5,geocodingService.forwardGeocode({query:searchValue,mode:"mapbox.places",countries:countries,language:language,types:["address","poi"],limit:limit,proximity:proximity}).send();case 5:if(_yield$geocodingServi=_context.sent,body=_yield$geocodingServi.body,200===_yield$geocodingServi.statusCode){_context.next=11;break}return console.warn("Failed to forwardGeocode with Mapbox",body),_context.abrupt("return");case 11:features=body.features,latestFeatures.current=features,isMounted()&&setOptions(features.map(optionFromFeature));case 14:case"end":return _context.stop()}}),_callee)})));return function(_x){return _ref2.apply(this,arguments)}}(),[geocodingService,countries,language,limit,proximity,isMounted]),isValidOption=Object(react.useMemo)((function(){return options.some((function(option){return option.value===value}))}),[value,options]);Object(react.useEffect)((function(){function _applyEffect(){return(_applyEffect=_asyncToGenerator(regeneratorRuntime.mark((function _callee2(){return regeneratorRuntime.wrap((function _callee2$(_context2){for(;;)switch(_context2.prev=_context2.next){case 0:if(value&&!isValidOption&&!isSearching){_context2.next=2;break}return _context2.abrupt("return");case 2:return _context2.next=4,handleSearch(value);case 4:case"end":return _context2.stop()}}),_callee2)})))).apply(this,arguments)}!function applyEffect(){return _applyEffect.apply(this,arguments)}()}),[value,handleSearch,isValidOption,isSearching]);var debouncedSearch=useDebounce(handleSearch,500);return Object(jsx_runtime.jsx)(select_default.a,Object.assign({className:classnames_default()("ant-place-select",className),value:value,showSearch:!0,options:options,onSelect:handleSelect,onSearch:debouncedSearch,filterOption:!1,notFoundContent:null,allowClear:!0},otherProps))};PlaceSelect_PlaceSelect.displayName="PlaceSelect";var optionFromFeature=function optionFromFeature(feature){return{label:feature.place_name,value:feature.id}};try{PlaceSelect_PlaceSelect.displayName="PlaceSelect",PlaceSelect_PlaceSelect.__docgenInfo={description:"",displayName:"PlaceSelect",props:{accessToken:{defaultValue:{value:""},description:"",name:"accessToken",required:!1,type:{name:"string"}},onFeatureSelect:{defaultValue:null,description:"",name:"onFeatureSelect",required:!1,type:{name:"((feature: GeocodeFeature) => void)"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/PlaceSelect.tsx#PlaceSelect"]={docgenInfo:PlaceSelect_PlaceSelect.__docgenInfo,name:"PlaceSelect",path:"src/components/PlaceSelect.tsx#PlaceSelect"})}catch(__react_docgen_typescript_loader_error){}__webpack_require__("./src/components/style/place-picker.less");var PlacePicker_excluded=["accessToken","className","flyToZoom","defaultCoordinates","onFeatureSelect","style"];function PlacePicker_slicedToArray(arr,i){return function PlacePicker_arrayWithHoles(arr){if(Array.isArray(arr))return arr}(arr)||function PlacePicker_iterableToArrayLimit(arr,i){var _i=null==arr?null:"undefined"!=typeof Symbol&&arr[Symbol.iterator]||arr["@@iterator"];if(null==_i)return;var _s,_e,_arr=[],_n=!0,_d=!1;try{for(_i=_i.call(arr);!(_n=(_s=_i.next()).done)&&(_arr.push(_s.value),!i||_arr.length!==i);_n=!0);}catch(err){_d=!0,_e=err}finally{try{_n||null==_i.return||_i.return()}finally{if(_d)throw _e}}return _arr}(arr,i)||function PlacePicker_unsupportedIterableToArray(o,minLen){if(!o)return;if("string"==typeof o)return PlacePicker_arrayLikeToArray(o,minLen);var n=Object.prototype.toString.call(o).slice(8,-1);"Object"===n&&o.constructor&&(n=o.constructor.name);if("Map"===n||"Set"===n)return Array.from(o);if("Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return PlacePicker_arrayLikeToArray(o,minLen)}(arr,i)||function PlacePicker_nonIterableRest(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function PlacePicker_arrayLikeToArray(arr,len){(null==len||len>arr.length)&&(len=arr.length);for(var i=0,arr2=new Array(len);i<len;i++)arr2[i]=arr[i];return arr2}function PlacePicker_objectWithoutProperties(source,excluded){if(null==source)return{};var key,i,target=function PlacePicker_objectWithoutPropertiesLoose(source,excluded){if(null==source)return{};var key,i,target={},sourceKeys=Object.keys(source);for(i=0;i<sourceKeys.length;i++)key=sourceKeys[i],excluded.indexOf(key)>=0||(target[key]=source[key]);return target}(source,excluded);if(Object.getOwnPropertySymbols){var sourceSymbolKeys=Object.getOwnPropertySymbols(source);for(i=0;i<sourceSymbolKeys.length;i++)key=sourceSymbolKeys[i],excluded.indexOf(key)>=0||Object.prototype.propertyIsEnumerable.call(source,key)&&(target[key]=source[key])}return target}var PlacePicker_PlacePicker=function PlacePicker(_ref){var accessToken=_ref.accessToken,className=_ref.className,_ref$flyToZoom=_ref.flyToZoom,flyToZoom=void 0===_ref$flyToZoom?16:_ref$flyToZoom,defaultCoordinates=_ref.defaultCoordinates,onFeatureSelect=_ref.onFeatureSelect,style=_ref.style,otherProps=PlacePicker_objectWithoutProperties(_ref,PlacePicker_excluded),_useState2=PlacePicker_slicedToArray(Object(react.useState)(),2),viewport=_useState2[0],setViewport=_useState2[1],_useState4=PlacePicker_slicedToArray(Object(react.useState)(!1),2),mapIsVisible=_useState4[0],setMapIsVisible=_useState4[1],handleFeatureSelect=Object(react.useCallback)((function(feature){var center=feature.center;center&&setViewport({longitude:center[0],latitude:center[1],zoom:flyToZoom}),onFeatureSelect&&onFeatureSelect(feature)}),[onFeatureSelect,flyToZoom]);return Object(react.useEffect)((function(){defaultCoordinates&&!viewport&&setViewport({longitude:defaultCoordinates[0],latitude:defaultCoordinates[1],zoom:flyToZoom})}),[viewport,flyToZoom,defaultCoordinates]),Object(react.useEffect)((function(){var timeoutId=setTimeout((function(){setMapIsVisible(!0)}),500);return function(){clearTimeout(timeoutId)}}),[]),Object(jsx_runtime.jsxs)("div",{className:classnames_default()("ant-place-picker",className),style:style,children:[Object(jsx_runtime.jsx)(PlaceSelect_PlaceSelect,Object.assign({accessToken:accessToken,onFeatureSelect:handleFeatureSelect,limit:6,style:{width:"100%"}},otherProps)),Object(jsx_runtime.jsx)("div",{className:"ant-place-picker-map-view",children:mapIsVisible?Object(jsx_runtime.jsx)(MapView,{accessToken:accessToken,viewport:viewport}):Object(jsx_runtime.jsx)(spin_default.a,{size:"large"})})]})};PlacePicker_PlacePicker.displayName="PlacePicker";try{PlacePicker_PlacePicker.displayName="PlacePicker",PlacePicker_PlacePicker.__docgenInfo={description:"",displayName:"PlacePicker",props:{accessToken:{defaultValue:null,description:"",name:"accessToken",required:!1,type:{name:"string"}},onFeatureSelect:{defaultValue:null,description:"",name:"onFeatureSelect",required:!1,type:{name:"((feature: GeocodeFeature) => void)"}},defaultCoordinates:{defaultValue:null,description:"",name:"defaultCoordinates",required:!1,type:{name:"[number, number]"}},flyToZoom:{defaultValue:{value:"16"},description:"",name:"flyToZoom",required:!1,type:{name:"number"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/PlacePicker.tsx#PlacePicker"]={docgenInfo:PlacePicker_PlacePicker.__docgenInfo,name:"PlacePicker",path:"src/components/PlacePicker.tsx#PlacePicker"})}catch(__react_docgen_typescript_loader_error){}},"./src/components/style/map-pin.less":function(module,exports,__webpack_require__){var api=__webpack_require__("./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js"),content=__webpack_require__("./node_modules/css-loader/dist/cjs.js!./node_modules/less-loader/dist/cjs.js?!./src/components/style/map-pin.less");"string"==typeof(content=content.__esModule?content.default:content)&&(content=[[module.i,content,""]]);var options={insert:"head",singleton:!1};api(content,options);module.exports=content.locals||{}},"./src/components/style/map-view.less":function(module,exports,__webpack_require__){var api=__webpack_require__("./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js"),content=__webpack_require__("./node_modules/css-loader/dist/cjs.js!./node_modules/less-loader/dist/cjs.js?!./src/components/style/map-view.less");"string"==typeof(content=content.__esModule?content.default:content)&&(content=[[module.i,content,""]]);var options={insert:"head",singleton:!1};api(content,options);module.exports=content.locals||{}},"./src/components/style/place-picker.less":function(module,exports,__webpack_require__){var api=__webpack_require__("./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js"),content=__webpack_require__("./node_modules/css-loader/dist/cjs.js!./node_modules/less-loader/dist/cjs.js?!./src/components/style/place-picker.less");"string"==typeof(content=content.__esModule?content.default:content)&&(content=[[module.i,content,""]]);var options={insert:"head",singleton:!1};api(content,options);module.exports=content.locals||{}},"./src/components/style/place-select.less":function(module,exports,__webpack_require__){var api=__webpack_require__("./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js"),content=__webpack_require__("./node_modules/css-loader/dist/cjs.js!./node_modules/less-loader/dist/cjs.js?!./src/components/style/place-select.less");"string"==typeof(content=content.__esModule?content.default:content)&&(content=[[module.i,content,""]]);var options={insert:"head",singleton:!1};api(content,options);module.exports=content.locals||{}},"./stories sync recursive ^\\.(?:(?:^|\\/|(?:(?:(?!(?:^|\\/)\\.).)*?)\\/)(?!\\.)(?=.)[^/]*?\\.stories\\.(js|jsx|ts|tsx))$":function(module,exports){function webpackEmptyContext(req){var e=new Error("Cannot find module '"+req+"'");throw e.code="MODULE_NOT_FOUND",e}webpackEmptyContext.keys=function(){return[]},webpackEmptyContext.resolve=webpackEmptyContext,module.exports=webpackEmptyContext,webpackEmptyContext.id="./stories sync recursive ^\\.(?:(?:^|\\/|(?:(?:(?!(?:^|\\/)\\.).)*?)\\/)(?!\\.)(?=.)[^/]*?\\.stories\\.(js|jsx|ts|tsx))$"},"./stories sync recursive ^\\.(?:(?:^|\\/|(?:(?:(?!(?:^|\\/)\\.).)*?)\\/)(?!\\.)(?=.)[^/]*?\\.stories\\.mdx)$":function(module,exports,__webpack_require__){var map={"./MapPin.stories.mdx":"./stories/MapPin.stories.mdx","./MapView.stories.mdx":"./stories/MapView.stories.mdx","./PlacePicker.stories.mdx":"./stories/PlacePicker.stories.mdx","./PlaceSelect.stories.mdx":"./stories/PlaceSelect.stories.mdx"};function webpackContext(req){var id=webpackContextResolve(req);return __webpack_require__(id)}function webpackContextResolve(req){if(!__webpack_require__.o(map,req)){var e=new Error("Cannot find module '"+req+"'");throw e.code="MODULE_NOT_FOUND",e}return map[req]}webpackContext.keys=function webpackContextKeys(){return Object.keys(map)},webpackContext.resolve=webpackContextResolve,module.exports=webpackContext,webpackContext.id="./stories sync recursive ^\\.(?:(?:^|\\/|(?:(?:(?!(?:^|\\/)\\.).)*?)\\/)(?!\\.)(?=.)[^/]*?\\.stories\\.mdx)$"},"./stories/MapPin.stories.mdx":function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"defaultStory",(function(){return defaultStory}));__webpack_require__("./node_modules/core-js/modules/es.object.keys.js"),__webpack_require__("./node_modules/core-js/modules/es.array.index-of.js"),__webpack_require__("./node_modules/core-js/modules/es.symbol.js"),__webpack_require__("./node_modules/core-js/modules/es.object.assign.js"),__webpack_require__("./node_modules/react/index.js");var esm=__webpack_require__("./node_modules/@mdx-js/react/dist/esm.js"),dist_esm=__webpack_require__("./node_modules/@storybook/addon-docs/dist/esm/index.js"),src_components=(__webpack_require__("./node_modules/core-js/modules/es.function.bind.js"),__webpack_require__("./src/components/index.ts")),utils=__webpack_require__("./stories/utils/index.ts"),jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js"),meta={title:utils.c+"MapPin",component:src_components.a,argTypes:Object.assign({},utils.b),args:{}},MapPin_story_DefaultTemplate=function DefaultTemplate(props){return Object(jsx_runtime.jsx)(src_components.a,Object.assign({},props))};MapPin_story_DefaultTemplate.displayName="DefaultTemplate";var Default=MapPin_story_DefaultTemplate.bind({});Default.parameters=Object.assign({storySource:{source:"(props) => <MapPin {...props} />"}},Default.parameters);try{MapPin.displayName="MapPin",MapPin.__docgenInfo={description:"",displayName:"MapPin",props:{centered:{defaultValue:null,description:"",name:"centered",required:!1,type:{name:"boolean"}},size:{defaultValue:{value:"64"},description:"",name:"size",required:!1,type:{name:"number"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["stories/MapPin.story.tsx#MapPin"]={docgenInfo:MapPin.__docgenInfo,name:"MapPin",path:"stories/MapPin.story.tsx#MapPin"})}catch(__react_docgen_typescript_loader_error){}try{ComponentMeta.displayName="ComponentMeta",ComponentMeta.__docgenInfo={description:"For the common case where a component's stories are simple components that receives args as props:\n\n```tsx\nexport default { ... } as ComponentMeta<typeof Button>;\n```",displayName:"ComponentMeta",props:{}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["stories/MapPin.story.tsx#ComponentMeta"]={docgenInfo:ComponentMeta.__docgenInfo,name:"ComponentMeta",path:"stories/MapPin.story.tsx#ComponentMeta"})}catch(__react_docgen_typescript_loader_error){}try{Default.displayName="Default",Default.__docgenInfo={description:"",displayName:"Default",props:{centered:{defaultValue:null,description:"",name:"centered",required:!1,type:{name:"boolean"}},size:{defaultValue:null,description:"",name:"size",required:!1,type:{name:"number"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["stories/MapPin.story.tsx#Default"]={docgenInfo:Default.__docgenInfo,name:"Default",path:"stories/MapPin.story.tsx#Default"})}catch(__react_docgen_typescript_loader_error){}var _excluded=["components"];function _extends(){return _extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source)Object.prototype.hasOwnProperty.call(source,key)&&(target[key]=source[key])}return target},_extends.apply(this,arguments)}function _objectWithoutProperties(source,excluded){if(null==source)return{};var key,i,target=function _objectWithoutPropertiesLoose(source,excluded){if(null==source)return{};var key,i,target={},sourceKeys=Object.keys(source);for(i=0;i<sourceKeys.length;i++)key=sourceKeys[i],excluded.indexOf(key)>=0||(target[key]=source[key]);return target}(source,excluded);if(Object.getOwnPropertySymbols){var sourceSymbolKeys=Object.getOwnPropertySymbols(source);for(i=0;i<sourceSymbolKeys.length;i++)key=sourceSymbolKeys[i],excluded.indexOf(key)>=0||Object.prototype.propertyIsEnumerable.call(source,key)&&(target[key]=source[key])}return target}var layoutProps={};function MDXContent(_ref){var components=_ref.components,props=_objectWithoutProperties(_ref,_excluded);return Object(esm.b)("wrapper",_extends({},layoutProps,props,{components:components,mdxType:"MDXLayout"}),Object(esm.b)("h1",{id:"mappin"},"MapPin"),Object(esm.b)(dist_esm.d,{title:meta.title,component:meta.component,argTypes:meta.argTypes,args:meta.args,mdxType:"Meta"}),Object(esm.b)("h2",{id:"default"},"Default"),Object(esm.b)(dist_esm.c,{mdxType:"Canvas"},Object(esm.b)(dist_esm.e,{name:"Default",mdxType:"Story"},Default)),Object(esm.b)(dist_esm.b,{of:src_components.a,story:"^",mdxType:"ArgsTable"}))}MDXContent.displayName="MDXContent",MDXContent.isMDXComponent=!0;var defaultStory=Object(dist_esm.f)(Default);defaultStory.storyName="Default",defaultStory.parameters={storySource:{source:"Default"}};var componentMeta={title:meta.title,component:meta.component,args:meta.args,argTypes:meta.argTypes,includeStories:["defaultStory"]},mdxStoryNameToKey={Default:"defaultStory"};componentMeta.parameters=componentMeta.parameters||{},componentMeta.parameters.docs=Object.assign({},componentMeta.parameters.docs||{},{page:function page(){return Object(esm.b)(dist_esm.a,{mdxStoryNameToKey:mdxStoryNameToKey,mdxComponentAnnotations:componentMeta},Object(esm.b)(MDXContent,null))}});__webpack_exports__.default=componentMeta},"./stories/MapView.stories.mdx":function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"defaultStory",(function(){return defaultStory}));__webpack_require__("./node_modules/core-js/modules/es.object.keys.js"),__webpack_require__("./node_modules/core-js/modules/es.array.index-of.js"),__webpack_require__("./node_modules/core-js/modules/es.symbol.js"),__webpack_require__("./node_modules/core-js/modules/es.object.assign.js"),__webpack_require__("./node_modules/react/index.js");var esm=__webpack_require__("./node_modules/@mdx-js/react/dist/esm.js"),dist_esm=__webpack_require__("./node_modules/@storybook/addon-docs/dist/esm/index.js"),src_components=(__webpack_require__("./node_modules/core-js/modules/es.function.bind.js"),__webpack_require__("./src/components/index.ts")),utils=__webpack_require__("./stories/utils/index.ts"),jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js"),meta={title:utils.c+"MapView",component:src_components.b,argTypes:Object.assign({},utils.b,{width:{type:"number"},height:{type:"number"}}),args:{width:320,height:240,accessToken:utils.a}},MapView_story_DefaultTemplate=function DefaultTemplate(props){return Object(jsx_runtime.jsx)(src_components.b,Object.assign({},props))};MapView_story_DefaultTemplate.displayName="DefaultTemplate";var Default=MapView_story_DefaultTemplate.bind({});Default.parameters=Object.assign({storySource:{source:"(props) => <MapView {...props} />"}},Default.parameters);try{MapView.displayName="MapView",MapView.__docgenInfo={description:"",displayName:"MapView",props:{className:{defaultValue:null,description:"",name:"className",required:!1,type:{name:"string"}},height:{defaultValue:{value:"100%"},description:"",name:"height",required:!1,type:{name:"string | number"}},style:{defaultValue:null,description:"",name:"style",required:!1,type:{name:"any"}},width:{defaultValue:{value:"100%"},description:"",name:"width",required:!1,type:{name:"string | number"}},onLoad:{defaultValue:null,description:"",name:"onLoad",required:!1,type:{name:"((event: MapLoadEvent) => void)"}},onError:{defaultValue:null,description:"",name:"onError",required:!1,type:{name:"((e: MapError) => void)"}},onClick:{defaultValue:null,description:"",name:"onClick",required:!1,type:{name:"((evt: MapEvent) => void)"}},onContextMenu:{defaultValue:null,description:"",name:"onContextMenu",required:!1,type:{name:"((evt: MapEvent) => void)"}},onMouseDown:{defaultValue:null,description:"",name:"onMouseDown",required:!1,type:{name:"((evt: MapEvent) => void)"}},onMouseEnter:{defaultValue:null,description:"",name:"onMouseEnter",required:!1,type:{name:"((evt: MapEvent) => void)"}},onMouseLeave:{defaultValue:null,description:"",name:"onMouseLeave",required:!1,type:{name:"((evt: MapEvent) => void)"}},onMouseMove:{defaultValue:null,description:"",name:"onMouseMove",required:!1,type:{name:"((evt: MapEvent) => void)"}},onMouseOut:{defaultValue:null,description:"",name:"onMouseOut",required:!1,type:{name:"((evt: MapEvent) => void)"}},onMouseUp:{defaultValue:null,description:"",name:"onMouseUp",required:!1,type:{name:"((evt: MapEvent) => void)"}},onTouchEnd:{defaultValue:null,description:"",name:"onTouchEnd",required:!1,type:{name:"((evt: MapEvent) => void)"}},onTouchMove:{defaultValue:null,description:"",name:"onTouchMove",required:!1,type:{name:"((evt: MapEvent) => void)"}},onTouchStart:{defaultValue:null,description:"",name:"onTouchStart",required:!1,type:{name:"((evt: MapEvent) => void)"}},onWheel:{defaultValue:null,description:"",name:"onWheel",required:!1,type:{name:"((evt: MapEvent) => void)"}},onTransitionEnd:{defaultValue:null,description:"",name:"onTransitionEnd",required:!1,type:{name:"(() => void)"}},accessToken:{defaultValue:{value:""},description:"",name:"accessToken",required:!1,type:{name:"string"}},locale:{defaultValue:{value:"mapViewDefaults.locale"},description:"",name:"locale",required:!1,type:{name:"string"}},mapboxgl:{defaultValue:null,description:"",name:"mapboxgl",required:!1,type:{name:"any"}},container:{defaultValue:null,description:"",name:"container",required:!1,type:{name:"any"}},gl:{defaultValue:null,description:"",name:"gl",required:!1,type:{name:"any"}},mapboxApiAccessToken:{defaultValue:null,description:"",name:"mapboxApiAccessToken",required:!1,type:{name:"string"}},mapboxApiUrl:{defaultValue:null,description:"",name:"mapboxApiUrl",required:!1,type:{name:"string"}},attributionControl:{defaultValue:null,description:"",name:"attributionControl",required:!1,type:{name:"boolean"}},preserveDrawingBuffer:{defaultValue:null,description:"",name:"preserveDrawingBuffer",required:!1,type:{name:"boolean"}},reuseMaps:{defaultValue:null,description:"",name:"reuseMaps",required:!1,type:{name:"boolean"}},transformRequest:{defaultValue:null,description:"",name:"transformRequest",required:!1,type:{name:"((url?: string, resourceType?: string) => MapRequest) | undefined"}},mapStyle:{defaultValue:{value:"mapViewDefaults.mapStyle"},description:"",name:"mapStyle",required:!1,type:{name:"any"}},preventStyleDiffing:{defaultValue:null,description:"",name:"preventStyleDiffing",required:!1,type:{name:"boolean"}},visible:{defaultValue:null,description:"",name:"visible",required:!1,type:{name:"boolean"}},asyncRender:{defaultValue:null,description:"",name:"asyncRender",required:!1,type:{name:"boolean"}},viewState:{defaultValue:null,description:"",name:"viewState",required:!1,type:{name:"ViewState"}},bearing:{defaultValue:null,description:"",name:"bearing",required:!1,type:{name:"number"}},pitch:{defaultValue:null,description:"",name:"pitch",required:!1,type:{name:"number"}},altitude:{defaultValue:null,description:"",name:"altitude",required:!1,type:{name:"number"}},mapOptions:{defaultValue:null,description:"",name:"mapOptions",required:!1,type:{name:'Omit<MapboxOptions, "container">'}},disableTokenWarning:{defaultValue:null,description:"",name:"disableTokenWarning",required:!1,type:{name:"boolean"}},visibilityConstraints:{defaultValue:null,description:"",name:"visibilityConstraints",required:!1,type:{name:"{ minZoom?: number; maxZoom?: number; minPitch?: number | undefined; maxPitch?: number | undefined; } | undefined"}},onResize:{defaultValue:null,description:"",name:"onResize",required:!1,type:{name:"((dimensions: { width: number; height: number; }) => void)"}},onViewStateChange:{defaultValue:null,description:"",name:"onViewStateChange",required:!1,type:{name:"Function"}},onViewportChange:{defaultValue:null,description:"",name:"onViewportChange",required:!1,type:{name:"Function"}},onInteractionStateChange:{defaultValue:null,description:"",name:"onInteractionStateChange",required:!1,type:{name:"Function"}},onHover:{defaultValue:null,description:"",name:"onHover",required:!1,type:{name:"((evt: MapEvent) => void)"}},onNativeClick:{defaultValue:null,description:"",name:"onNativeClick",required:!1,type:{name:"((evt: MapEvent) => void)"}},onDblClick:{defaultValue:null,description:"",name:"onDblClick",required:!1,type:{name:"((evt: MapEvent) => void)"}},transitionDuration:{defaultValue:null,description:"",name:"transitionDuration",required:!1,type:{name:'number | "auto"'}},transitionInterpolator:{defaultValue:null,description:"",name:"transitionInterpolator",required:!1,type:{name:"any"}},transitionInterruption:{defaultValue:null,description:"",name:"transitionInterruption",required:!1,type:{name:"enum",value:[{value:"1"},{value:"2"},{value:"3"},{value:"4"}]}},transitionEasing:{defaultValue:null,description:"",name:"transitionEasing",required:!1,type:{name:"EasingFunction"}},onTransitionStart:{defaultValue:null,description:"",name:"onTransitionStart",required:!1,type:{name:"(() => void)"}},onTransitionInterrupt:{defaultValue:null,description:"",name:"onTransitionInterrupt",required:!1,type:{name:"(() => void)"}},scrollZoom:{defaultValue:null,description:"",name:"scrollZoom",required:!1,type:{name:"boolean | { speed?: number; smooth?: boolean; } | undefined"}},dragPan:{defaultValue:null,description:"",name:"dragPan",required:!1,type:{name:"boolean | { inertia?: number; }"}},dragRotate:{defaultValue:null,description:"",name:"dragRotate",required:!1,type:{name:"boolean | { inertia?: number; }"}},doubleClickZoom:{defaultValue:null,description:"",name:"doubleClickZoom",required:!1,type:{name:"boolean"}},touchZoom:{defaultValue:null,description:"",name:"touchZoom",required:!1,type:{name:"boolean | { inertia?: number; }"}},touchRotate:{defaultValue:null,description:"",name:"touchRotate",required:!1,type:{name:"boolean | { inertia?: number; }"}},keyboard:{defaultValue:null,description:"",name:"keyboard",required:!1,type:{name:"boolean | { zoomSpeed?: number; moveSpeed?: number; rotateSpeedX?: number | undefined; rotateSpeedY?: number | undefined; } | undefined"}},touchAction:{defaultValue:null,description:"",name:"touchAction",required:!1,type:{name:"string"}},eventRecognizerOptions:{defaultValue:null,description:"",name:"eventRecognizerOptions",required:!1,type:{name:"any"}},clickRadius:{defaultValue:null,description:"",name:"clickRadius",required:!1,type:{name:"number"}},interactiveLayerIds:{defaultValue:null,description:"",name:"interactiveLayerIds",required:!1,type:{name:"string[]"}},getCursor:{defaultValue:null,description:"",name:"getCursor",required:!1,type:{name:"((state: ExtraState) => string)"}},controller:{defaultValue:null,description:"",name:"controller",required:!1,type:{name:"MapController"}},maxZoom:{defaultValue:null,description:"",name:"maxZoom",required:!1,type:{name:"number"}},minZoom:{defaultValue:null,description:"",name:"minZoom",required:!1,type:{name:"number"}},maxPitch:{defaultValue:null,description:"",name:"maxPitch",required:!1,type:{name:"number"}},minPitch:{defaultValue:null,description:"",name:"minPitch",required:!1,type:{name:"number"}},viewport:{defaultValue:null,description:"",name:"viewport",required:!1,type:{name:"ViewState | null"}},defaultViewport:{defaultValue:{value:"mapViewDefaults.defaultViewport"},description:"",name:"defaultViewport",required:!1,type:{name:"ViewState | null"}},flyMode:{defaultValue:{value:"true"},description:"",name:"flyMode",required:!1,type:{name:"boolean"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["stories/MapView.story.tsx#MapView"]={docgenInfo:MapView.__docgenInfo,name:"MapView",path:"stories/MapView.story.tsx#MapView"})}catch(__react_docgen_typescript_loader_error){}try{ComponentMeta.displayName="ComponentMeta",ComponentMeta.__docgenInfo={description:"For the common case where a component's stories are simple components that receives args as props:\n\n```tsx\nexport default { ... } as ComponentMeta<typeof Button>;\n```",displayName:"ComponentMeta",props:{}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["stories/MapView.story.tsx#ComponentMeta"]={docgenInfo:ComponentMeta.__docgenInfo,name:"ComponentMeta",path:"stories/MapView.story.tsx#ComponentMeta"})}catch(__react_docgen_typescript_loader_error){}try{Default.displayName="Default",Default.__docgenInfo={description:"",displayName:"Default",props:{className:{defaultValue:null,description:"",name:"className",required:!1,type:{name:"string"}},style:{defaultValue:null,description:"",name:"style",required:!1,type:{name:"any"}},onLoad:{defaultValue:null,description:"",name:"onLoad",required:!1,type:{name:"((event: MapLoadEvent) => void)"}},onError:{defaultValue:null,description:"",name:"onError",required:!1,type:{name:"((e: MapError) => void)"}},onClick:{defaultValue:null,description:"",name:"onClick",required:!1,type:{name:"((evt: MapEvent) => void)"}},onContextMenu:{defaultValue:null,description:"",name:"onContextMenu",required:!1,type:{name:"((evt: MapEvent) => void)"}},onMouseDown:{defaultValue:null,description:"",name:"onMouseDown",required:!1,type:{name:"((evt: MapEvent) => void)"}},onMouseEnter:{defaultValue:null,description:"",name:"onMouseEnter",required:!1,type:{name:"((evt: MapEvent) => void)"}},onMouseLeave:{defaultValue:null,description:"",name:"onMouseLeave",required:!1,type:{name:"((evt: MapEvent) => void)"}},onMouseMove:{defaultValue:null,description:"",name:"onMouseMove",required:!1,type:{name:"((evt: MapEvent) => void)"}},onMouseOut:{defaultValue:null,description:"",name:"onMouseOut",required:!1,type:{name:"((evt: MapEvent) => void)"}},onMouseUp:{defaultValue:null,description:"",name:"onMouseUp",required:!1,type:{name:"((evt: MapEvent) => void)"}},onTouchEnd:{defaultValue:null,description:"",name:"onTouchEnd",required:!1,type:{name:"((evt: MapEvent) => void)"}},onTouchMove:{defaultValue:null,description:"",name:"onTouchMove",required:!1,type:{name:"((evt: MapEvent) => void)"}},onTouchStart:{defaultValue:null,description:"",name:"onTouchStart",required:!1,type:{name:"((evt: MapEvent) => void)"}},onWheel:{defaultValue:null,description:"",name:"onWheel",required:!1,type:{name:"((evt: MapEvent) => void)"}},onTransitionEnd:{defaultValue:null,description:"",name:"onTransitionEnd",required:!1,type:{name:"(() => void)"}},ref:{defaultValue:null,description:"",name:"ref",required:!1,type:{name:"Ref<MapRef>"}},mapboxgl:{defaultValue:null,description:"",name:"mapboxgl",required:!1,type:{name:"any"}},container:{defaultValue:null,description:"",name:"container",required:!1,type:{name:"any"}},gl:{defaultValue:null,description:"",name:"gl",required:!1,type:{name:"any"}},mapboxApiAccessToken:{defaultValue:null,description:"",name:"mapboxApiAccessToken",required:!1,type:{name:"string"}},mapboxApiUrl:{defaultValue:null,description:"",name:"mapboxApiUrl",required:!1,type:{name:"string"}},attributionControl:{defaultValue:null,description:"",name:"attributionControl",required:!1,type:{name:"boolean"}},preserveDrawingBuffer:{defaultValue:null,description:"",name:"preserveDrawingBuffer",required:!1,type:{name:"boolean"}},reuseMaps:{defaultValue:null,description:"",name:"reuseMaps",required:!1,type:{name:"boolean"}},transformRequest:{defaultValue:null,description:"",name:"transformRequest",required:!1,type:{name:"((url?: string, resourceType?: string) => MapRequest) | undefined"}},mapStyle:{defaultValue:null,description:"",name:"mapStyle",required:!1,type:{name:"any"}},preventStyleDiffing:{defaultValue:null,description:"",name:"preventStyleDiffing",required:!1,type:{name:"boolean"}},visible:{defaultValue:null,description:"",name:"visible",required:!1,type:{name:"boolean"}},asyncRender:{defaultValue:null,description:"",name:"asyncRender",required:!1,type:{name:"boolean"}},viewState:{defaultValue:null,description:"",name:"viewState",required:!1,type:{name:"ViewState"}},bearing:{defaultValue:null,description:"",name:"bearing",required:!1,type:{name:"number"}},pitch:{defaultValue:null,description:"",name:"pitch",required:!1,type:{name:"number"}},altitude:{defaultValue:null,description:"",name:"altitude",required:!1,type:{name:"number"}},mapOptions:{defaultValue:null,description:"",name:"mapOptions",required:!1,type:{name:'Omit<MapboxOptions, "container">'}},disableTokenWarning:{defaultValue:null,description:"",name:"disableTokenWarning",required:!1,type:{name:"boolean"}},visibilityConstraints:{defaultValue:null,description:"",name:"visibilityConstraints",required:!1,type:{name:"{ minZoom?: number; maxZoom?: number; minPitch?: number | undefined; maxPitch?: number | undefined; } | undefined"}},onResize:{defaultValue:null,description:"",name:"onResize",required:!1,type:{name:"((dimensions: { width: number; height: number; }) => void)"}},onViewStateChange:{defaultValue:null,description:"",name:"onViewStateChange",required:!1,type:{name:"Function"}},onViewportChange:{defaultValue:null,description:"",name:"onViewportChange",required:!1,type:{name:"Function"}},onInteractionStateChange:{defaultValue:null,description:"",name:"onInteractionStateChange",required:!1,type:{name:"Function"}},onHover:{defaultValue:null,description:"",name:"onHover",required:!1,type:{name:"((evt: MapEvent) => void)"}},onNativeClick:{defaultValue:null,description:"",name:"onNativeClick",required:!1,type:{name:"((evt: MapEvent) => void)"}},onDblClick:{defaultValue:null,description:"",name:"onDblClick",required:!1,type:{name:"((evt: MapEvent) => void)"}},transitionDuration:{defaultValue:null,description:"",name:"transitionDuration",required:!1,type:{name:'number | "auto"'}},transitionInterpolator:{defaultValue:null,description:"",name:"transitionInterpolator",required:!1,type:{name:"any"}},transitionInterruption:{defaultValue:null,description:"",name:"transitionInterruption",required:!1,type:{name:"enum",value:[{value:"1"},{value:"2"},{value:"3"},{value:"4"}]}},transitionEasing:{defaultValue:null,description:"",name:"transitionEasing",required:!1,type:{name:"EasingFunction"}},onTransitionStart:{defaultValue:null,description:"",name:"onTransitionStart",required:!1,type:{name:"(() => void)"}},onTransitionInterrupt:{defaultValue:null,description:"",name:"onTransitionInterrupt",required:!1,type:{name:"(() => void)"}},scrollZoom:{defaultValue:null,description:"",name:"scrollZoom",required:!1,type:{name:"boolean | { speed?: number; smooth?: boolean; } | undefined"}},dragPan:{defaultValue:null,description:"",name:"dragPan",required:!1,type:{name:"boolean | { inertia?: number; }"}},dragRotate:{defaultValue:null,description:"",name:"dragRotate",required:!1,type:{name:"boolean | { inertia?: number; }"}},doubleClickZoom:{defaultValue:null,description:"",name:"doubleClickZoom",required:!1,type:{name:"boolean"}},touchZoom:{defaultValue:null,description:"",name:"touchZoom",required:!1,type:{name:"boolean | { inertia?: number; }"}},touchRotate:{defaultValue:null,description:"",name:"touchRotate",required:!1,type:{name:"boolean | { inertia?: number; }"}},keyboard:{defaultValue:null,description:"",name:"keyboard",required:!1,type:{name:"boolean | { zoomSpeed?: number; moveSpeed?: number; rotateSpeedX?: number | undefined; rotateSpeedY?: number | undefined; } | undefined"}},touchAction:{defaultValue:null,description:"",name:"touchAction",required:!1,type:{name:"string"}},eventRecognizerOptions:{defaultValue:null,description:"",name:"eventRecognizerOptions",required:!1,type:{name:"any"}},clickRadius:{defaultValue:null,description:"",name:"clickRadius",required:!1,type:{name:"number"}},interactiveLayerIds:{defaultValue:null,description:"",name:"interactiveLayerIds",required:!1,type:{name:"string[]"}},getCursor:{defaultValue:null,description:"",name:"getCursor",required:!1,type:{name:"((state: ExtraState) => string)"}},controller:{defaultValue:null,description:"",name:"controller",required:!1,type:{name:"MapController"}},maxZoom:{defaultValue:null,description:"",name:"maxZoom",required:!1,type:{name:"number"}},minZoom:{defaultValue:null,description:"",name:"minZoom",required:!1,type:{name:"number"}},maxPitch:{defaultValue:null,description:"",name:"maxPitch",required:!1,type:{name:"number"}},minPitch:{defaultValue:null,description:"",name:"minPitch",required:!1,type:{name:"number"}},accessToken:{defaultValue:null,description:"",name:"accessToken",required:!1,type:{name:"string"}},width:{defaultValue:null,description:"",name:"width",required:!1,type:{name:"string | number"}},height:{defaultValue:null,description:"",name:"height",required:!1,type:{name:"string | number"}},locale:{defaultValue:null,description:"",name:"locale",required:!1,type:{name:"string"}},viewport:{defaultValue:null,description:"",name:"viewport",required:!1,type:{name:"ViewState | null"}},defaultViewport:{defaultValue:null,description:"",name:"defaultViewport",required:!1,type:{name:"ViewState | null"}},flyMode:{defaultValue:null,description:"",name:"flyMode",required:!1,type:{name:"boolean"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["stories/MapView.story.tsx#Default"]={docgenInfo:Default.__docgenInfo,name:"Default",path:"stories/MapView.story.tsx#Default"})}catch(__react_docgen_typescript_loader_error){}var _excluded=["components"];function _extends(){return _extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source)Object.prototype.hasOwnProperty.call(source,key)&&(target[key]=source[key])}return target},_extends.apply(this,arguments)}function _objectWithoutProperties(source,excluded){if(null==source)return{};var key,i,target=function _objectWithoutPropertiesLoose(source,excluded){if(null==source)return{};var key,i,target={},sourceKeys=Object.keys(source);for(i=0;i<sourceKeys.length;i++)key=sourceKeys[i],excluded.indexOf(key)>=0||(target[key]=source[key]);return target}(source,excluded);if(Object.getOwnPropertySymbols){var sourceSymbolKeys=Object.getOwnPropertySymbols(source);for(i=0;i<sourceSymbolKeys.length;i++)key=sourceSymbolKeys[i],excluded.indexOf(key)>=0||Object.prototype.propertyIsEnumerable.call(source,key)&&(target[key]=source[key])}return target}var layoutProps={};function MDXContent(_ref){var components=_ref.components,props=_objectWithoutProperties(_ref,_excluded);return Object(esm.b)("wrapper",_extends({},layoutProps,props,{components:components,mdxType:"MDXLayout"}),Object(esm.b)("h1",{id:"mapview"},"MapView"),Object(esm.b)(dist_esm.d,{title:meta.title,component:meta.component,argTypes:meta.argTypes,args:meta.args,mdxType:"Meta"}),Object(esm.b)("h2",{id:"default"},"Default"),Object(esm.b)(dist_esm.c,{mdxType:"Canvas"},Object(esm.b)(dist_esm.e,{name:"Default",mdxType:"Story"},Default)),Object(esm.b)(dist_esm.b,{of:src_components.b,story:"^",mdxType:"ArgsTable"}))}MDXContent.displayName="MDXContent",MDXContent.isMDXComponent=!0;var defaultStory=Object(dist_esm.f)(Default);defaultStory.storyName="Default",defaultStory.parameters={storySource:{source:"Default"}};var componentMeta={title:meta.title,component:meta.component,args:meta.args,argTypes:meta.argTypes,includeStories:["defaultStory"]},mdxStoryNameToKey={Default:"defaultStory"};componentMeta.parameters=componentMeta.parameters||{},componentMeta.parameters.docs=Object.assign({},componentMeta.parameters.docs||{},{page:function page(){return Object(esm.b)(dist_esm.a,{mdxStoryNameToKey:mdxStoryNameToKey,mdxComponentAnnotations:componentMeta},Object(esm.b)(MDXContent,null))}});__webpack_exports__.default=componentMeta},"./stories/PlacePicker.stories.mdx":function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"defaultStory",(function(){return defaultStory}));__webpack_require__("./node_modules/core-js/modules/es.object.keys.js"),__webpack_require__("./node_modules/core-js/modules/es.array.index-of.js"),__webpack_require__("./node_modules/core-js/modules/es.symbol.js"),__webpack_require__("./node_modules/core-js/modules/es.object.assign.js"),__webpack_require__("./node_modules/react/index.js");var esm=__webpack_require__("./node_modules/@mdx-js/react/dist/esm.js"),dist_esm=__webpack_require__("./node_modules/@storybook/addon-docs/dist/esm/index.js"),src_components=(__webpack_require__("./node_modules/core-js/modules/es.function.bind.js"),__webpack_require__("./src/components/index.ts")),utils=__webpack_require__("./stories/utils/index.ts"),jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js"),meta={title:utils.c+"PlacePicker",component:src_components.c,argTypes:Object.assign({},utils.b),args:{accessToken:utils.a,placeholder:"Type an address"}},PlacePicker_story_DefaultTemplate=function DefaultTemplate(props){return Object(jsx_runtime.jsx)(src_components.c,Object.assign({},props))};PlacePicker_story_DefaultTemplate.displayName="DefaultTemplate";var Default=PlacePicker_story_DefaultTemplate.bind({});Default.parameters=Object.assign({storySource:{source:"(props) => <PlacePicker {...props} />"}},Default.parameters);try{PlacePicker.displayName="PlacePicker",PlacePicker.__docgenInfo={description:"",displayName:"PlacePicker",props:{accessToken:{defaultValue:null,description:"",name:"accessToken",required:!1,type:{name:"string"}},onFeatureSelect:{defaultValue:null,description:"",name:"onFeatureSelect",required:!1,type:{name:"((feature: GeocodeFeature) => void)"}},defaultCoordinates:{defaultValue:null,description:"",name:"defaultCoordinates",required:!1,type:{name:"[number, number]"}},flyToZoom:{defaultValue:{value:"16"},description:"",name:"flyToZoom",required:!1,type:{name:"number"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["stories/PlacePicker.story.tsx#PlacePicker"]={docgenInfo:PlacePicker.__docgenInfo,name:"PlacePicker",path:"stories/PlacePicker.story.tsx#PlacePicker"})}catch(__react_docgen_typescript_loader_error){}try{ComponentMeta.displayName="ComponentMeta",ComponentMeta.__docgenInfo={description:"For the common case where a component's stories are simple components that receives args as props:\n\n```tsx\nexport default { ... } as ComponentMeta<typeof Button>;\n```",displayName:"ComponentMeta",props:{}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["stories/PlacePicker.story.tsx#ComponentMeta"]={docgenInfo:ComponentMeta.__docgenInfo,name:"ComponentMeta",path:"stories/PlacePicker.story.tsx#ComponentMeta"})}catch(__react_docgen_typescript_loader_error){}try{Default.displayName="Default",Default.__docgenInfo={description:"",displayName:"Default",props:{accessToken:{defaultValue:null,description:"",name:"accessToken",required:!1,type:{name:"string"}},onFeatureSelect:{defaultValue:null,description:"",name:"onFeatureSelect",required:!1,type:{name:"((feature: GeocodeFeature) => void)"}},defaultCoordinates:{defaultValue:null,description:"",name:"defaultCoordinates",required:!1,type:{name:"[number, number]"}},flyToZoom:{defaultValue:null,description:"",name:"flyToZoom",required:!1,type:{name:"number"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["stories/PlacePicker.story.tsx#Default"]={docgenInfo:Default.__docgenInfo,name:"Default",path:"stories/PlacePicker.story.tsx#Default"})}catch(__react_docgen_typescript_loader_error){}var _excluded=["components"];function _extends(){return _extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source)Object.prototype.hasOwnProperty.call(source,key)&&(target[key]=source[key])}return target},_extends.apply(this,arguments)}function _objectWithoutProperties(source,excluded){if(null==source)return{};var key,i,target=function _objectWithoutPropertiesLoose(source,excluded){if(null==source)return{};var key,i,target={},sourceKeys=Object.keys(source);for(i=0;i<sourceKeys.length;i++)key=sourceKeys[i],excluded.indexOf(key)>=0||(target[key]=source[key]);return target}(source,excluded);if(Object.getOwnPropertySymbols){var sourceSymbolKeys=Object.getOwnPropertySymbols(source);for(i=0;i<sourceSymbolKeys.length;i++)key=sourceSymbolKeys[i],excluded.indexOf(key)>=0||Object.prototype.propertyIsEnumerable.call(source,key)&&(target[key]=source[key])}return target}var layoutProps={};function MDXContent(_ref){var components=_ref.components,props=_objectWithoutProperties(_ref,_excluded);return Object(esm.b)("wrapper",_extends({},layoutProps,props,{components:components,mdxType:"MDXLayout"}),Object(esm.b)("h1",{id:"placepicker"},"PlacePicker"),Object(esm.b)(dist_esm.d,{title:meta.title,component:meta.component,argTypes:meta.argTypes,args:meta.args,mdxType:"Meta"}),Object(esm.b)("h2",{id:"default"},"Default"),Object(esm.b)(dist_esm.c,{mdxType:"Canvas"},Object(esm.b)(dist_esm.e,{name:"Default",mdxType:"Story"},Default)),Object(esm.b)(dist_esm.b,{of:src_components.c,story:"^",mdxType:"ArgsTable"}))}MDXContent.displayName="MDXContent",MDXContent.isMDXComponent=!0;var defaultStory=Object(dist_esm.f)(Default);defaultStory.storyName="Default",defaultStory.parameters={storySource:{source:"Default"}};var componentMeta={title:meta.title,component:meta.component,args:meta.args,argTypes:meta.argTypes,includeStories:["defaultStory"]},mdxStoryNameToKey={Default:"defaultStory"};componentMeta.parameters=componentMeta.parameters||{},componentMeta.parameters.docs=Object.assign({},componentMeta.parameters.docs||{},{page:function page(){return Object(esm.b)(dist_esm.a,{mdxStoryNameToKey:mdxStoryNameToKey,mdxComponentAnnotations:componentMeta},Object(esm.b)(MDXContent,null))}});__webpack_exports__.default=componentMeta},"./stories/PlaceSelect.stories.mdx":function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"defaultStory",(function(){return defaultStory}));__webpack_require__("./node_modules/core-js/modules/es.object.keys.js"),__webpack_require__("./node_modules/core-js/modules/es.array.index-of.js"),__webpack_require__("./node_modules/core-js/modules/es.symbol.js"),__webpack_require__("./node_modules/core-js/modules/es.object.assign.js"),__webpack_require__("./node_modules/react/index.js");var esm=__webpack_require__("./node_modules/@mdx-js/react/dist/esm.js"),dist_esm=__webpack_require__("./node_modules/@storybook/addon-docs/dist/esm/index.js"),src_components=(__webpack_require__("./node_modules/core-js/modules/es.function.bind.js"),__webpack_require__("./src/components/index.ts")),utils=__webpack_require__("./stories/utils/index.ts"),jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js"),meta={title:utils.c+"PlaceSelect",component:src_components.d,argTypes:Object.assign({},utils.b),args:{accessToken:utils.a,placeholder:"Type an address",style:{width:320}}},PlaceSelect_story_DefaultTemplate=function DefaultTemplate(props){return Object(jsx_runtime.jsx)(src_components.d,Object.assign({},props))};PlaceSelect_story_DefaultTemplate.displayName="DefaultTemplate";var Default=PlaceSelect_story_DefaultTemplate.bind({});Default.parameters=Object.assign({storySource:{source:"(props) => <PlaceSelect {...props} />"}},Default.parameters);try{PlaceSelect.displayName="PlaceSelect",PlaceSelect.__docgenInfo={description:"",displayName:"PlaceSelect",props:{accessToken:{defaultValue:{value:""},description:"",name:"accessToken",required:!1,type:{name:"string"}},onFeatureSelect:{defaultValue:null,description:"",name:"onFeatureSelect",required:!1,type:{name:"((feature: GeocodeFeature) => void)"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["stories/PlaceSelect.story.tsx#PlaceSelect"]={docgenInfo:PlaceSelect.__docgenInfo,name:"PlaceSelect",path:"stories/PlaceSelect.story.tsx#PlaceSelect"})}catch(__react_docgen_typescript_loader_error){}try{ComponentMeta.displayName="ComponentMeta",ComponentMeta.__docgenInfo={description:"For the common case where a component's stories are simple components that receives args as props:\n\n```tsx\nexport default { ... } as ComponentMeta<typeof Button>;\n```",displayName:"ComponentMeta",props:{}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["stories/PlaceSelect.story.tsx#ComponentMeta"]={docgenInfo:ComponentMeta.__docgenInfo,name:"ComponentMeta",path:"stories/PlaceSelect.story.tsx#ComponentMeta"})}catch(__react_docgen_typescript_loader_error){}try{Default.displayName="Default",Default.__docgenInfo={description:"",displayName:"Default",props:{accessToken:{defaultValue:null,description:"",name:"accessToken",required:!1,type:{name:"string"}},onFeatureSelect:{defaultValue:null,description:"",name:"onFeatureSelect",required:!1,type:{name:"((feature: GeocodeFeature) => void)"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["stories/PlaceSelect.story.tsx#Default"]={docgenInfo:Default.__docgenInfo,name:"Default",path:"stories/PlaceSelect.story.tsx#Default"})}catch(__react_docgen_typescript_loader_error){}var _excluded=["components"];function _extends(){return _extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source)Object.prototype.hasOwnProperty.call(source,key)&&(target[key]=source[key])}return target},_extends.apply(this,arguments)}function _objectWithoutProperties(source,excluded){if(null==source)return{};var key,i,target=function _objectWithoutPropertiesLoose(source,excluded){if(null==source)return{};var key,i,target={},sourceKeys=Object.keys(source);for(i=0;i<sourceKeys.length;i++)key=sourceKeys[i],excluded.indexOf(key)>=0||(target[key]=source[key]);return target}(source,excluded);if(Object.getOwnPropertySymbols){var sourceSymbolKeys=Object.getOwnPropertySymbols(source);for(i=0;i<sourceSymbolKeys.length;i++)key=sourceSymbolKeys[i],excluded.indexOf(key)>=0||Object.prototype.propertyIsEnumerable.call(source,key)&&(target[key]=source[key])}return target}var layoutProps={};function MDXContent(_ref){var components=_ref.components,props=_objectWithoutProperties(_ref,_excluded);return Object(esm.b)("wrapper",_extends({},layoutProps,props,{components:components,mdxType:"MDXLayout"}),Object(esm.b)("h1",{id:"placeselect"},"PlaceSelect"),Object(esm.b)(dist_esm.d,{title:meta.title,component:meta.component,argTypes:meta.argTypes,args:meta.args,mdxType:"Meta"}),Object(esm.b)("h2",{id:"default"},"Default"),Object(esm.b)(dist_esm.c,{mdxType:"Canvas"},Object(esm.b)(dist_esm.e,{name:"Default",mdxType:"Story"},Default)),Object(esm.b)(dist_esm.b,{of:src_components.d,story:"^",mdxType:"ArgsTable"}))}MDXContent.displayName="MDXContent",MDXContent.isMDXComponent=!0;var defaultStory=Object(dist_esm.f)(Default);defaultStory.storyName="Default",defaultStory.parameters={storySource:{source:"Default"}};var componentMeta={title:meta.title,component:meta.component,args:meta.args,argTypes:meta.argTypes,includeStories:["defaultStory"]},mdxStoryNameToKey={Default:"defaultStory"};componentMeta.parameters=componentMeta.parameters||{},componentMeta.parameters.docs=Object.assign({},componentMeta.parameters.docs||{},{page:function page(){return Object(esm.b)(dist_esm.a,{mdxStoryNameToKey:mdxStoryNameToKey,mdxComponentAnnotations:componentMeta},Object(esm.b)(MDXContent,null))}});__webpack_exports__.default=componentMeta},"./stories/style/reset.less":function(module,exports,__webpack_require__){var api=__webpack_require__("./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js"),content=__webpack_require__("./node_modules/css-loader/dist/cjs.js!./node_modules/less-loader/dist/cjs.js?!./stories/style/reset.less");"string"==typeof(content=content.__esModule?content.default:content)&&(content=[[module.i,content,""]]);var options={insert:"head",singleton:!1};api(content,options);module.exports=content.locals||{}},"./stories/utils/index.ts":function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.d(__webpack_exports__,"c",(function(){return titlePrefix})),__webpack_require__.d(__webpack_exports__,"a",(function(){return MAPBOX_API_ACCESS_TOKEN})),__webpack_require__.d(__webpack_exports__,"b",(function(){return storybookSizeArgTypes}));__webpack_require__("./node_modules/classnames/index.js"),__webpack_require__("./node_modules/core-js/modules/es.function.name.js"),__webpack_require__("./node_modules/react/index.js");var jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js"),Label_Label=function Label(_ref){var name=_ref.name,value=_ref.value;return Object(jsx_runtime.jsx)("div",{style:{textAlign:"center",color:"#333"},children:Object(jsx_runtime.jsxs)("small",{children:[name,"=",function labelValue(value){switch(typeof value){case"boolean":return value?"true":"false";case"string":return'"'+value+'"';default:return String(value)}}(value)]})})};Label_Label.displayName="Label";try{Label_Label.displayName="Label",Label_Label.__docgenInfo={description:"",displayName:"Label",props:{name:{defaultValue:null,description:"",name:"name",required:!0,type:{name:"string"}},value:{defaultValue:null,description:"",name:"value",required:!0,type:{name:"unknown"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["stories/utils/components/Label.tsx#Label"]={docgenInfo:Label_Label.__docgenInfo,name:"Label",path:"stories/utils/components/Label.tsx#Label"})}catch(__react_docgen_typescript_loader_error){}__webpack_require__("./node_modules/core-js/modules/es.object.keys.js"),__webpack_require__("./node_modules/core-js/modules/es.array.index-of.js"),__webpack_require__("./node_modules/core-js/modules/es.symbol.js"),__webpack_require__("./node_modules/core-js/modules/es.object.assign.js");var _excluded=["children","layout","style"];function _objectWithoutProperties(source,excluded){if(null==source)return{};var key,i,target=function _objectWithoutPropertiesLoose(source,excluded){if(null==source)return{};var key,i,target={},sourceKeys=Object.keys(source);for(i=0;i<sourceKeys.length;i++)key=sourceKeys[i],excluded.indexOf(key)>=0||(target[key]=source[key]);return target}(source,excluded);if(Object.getOwnPropertySymbols){var sourceSymbolKeys=Object.getOwnPropertySymbols(source);for(i=0;i<sourceSymbolKeys.length;i++)key=sourceSymbolKeys[i],excluded.indexOf(key)>=0||Object.prototype.propertyIsEnumerable.call(source,key)&&(target[key]=source[key])}return target}var StoryContainer_StoryContainer=function StoryContainer(_ref){var children=_ref.children,_ref$layout=_ref.layout,layout=void 0===_ref$layout?"vertical":_ref$layout,styleProp=_ref.style,otherProps=_objectWithoutProperties(_ref,_excluded),style=Object.assign({},{display:"flex",alignItems:"center",flex:"1 1 auto",flexDirection:"column",height:"100%"},"horizontal"===layout?{flexDirection:"row",width:"100%",justifyContent:"space-evenly"}:{flexDirection:"column",height:"100%",maxWidth:"50%",margin:"0 auto",justifyContent:"space-evenly"},styleProp);return Object(jsx_runtime.jsx)("div",Object.assign({style:style},otherProps,{children:children}))};StoryContainer_StoryContainer.displayName="StoryContainer";try{StoryContainer_StoryContainer.displayName="StoryContainer",StoryContainer_StoryContainer.__docgenInfo={description:"",displayName:"StoryContainer",props:{layout:{defaultValue:{value:"vertical"},description:"",name:"layout",required:!1,type:{name:"enum",value:[{value:'"horizontal"'},{value:'"vertical"'}]}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["stories/utils/components/StoryContainer.tsx#StoryContainer"]={docgenInfo:StoryContainer_StoryContainer.__docgenInfo,name:"StoryContainer",path:"stories/utils/components/StoryContainer.tsx#StoryContainer"})}catch(__react_docgen_typescript_loader_error){}__webpack_require__("./stories/style/reset.less"),__webpack_require__("./node_modules/antd/lib/style/index.less");var titlePrefix="antd-place-picker/",MAPBOX_API_ACCESS_TOKEN="pk.eyJ1IjoibWdjcmVhIiwiYSI6ImNrNmppOWR1NzA5OHUzZm83NW9vNzR6NXMifQ.pAv60KyeSgwRimEOyGyG5Q",storybookSizeOptions=(__webpack_require__("./node_modules/core-js/modules/es.array.map.js"),__webpack_require__("./node_modules/core-js/modules/es.symbol.to-primitive.js"),__webpack_require__("./node_modules/core-js/modules/es.date.to-primitive.js"),__webpack_require__("./node_modules/core-js/modules/es.symbol.description.js"),__webpack_require__("./node_modules/core-js/modules/es.object.to-string.js"),__webpack_require__("./node_modules/core-js/modules/es.number.constructor.js"),__webpack_require__("./node_modules/core-js/modules/es.array.is-array.js"),__webpack_require__("./node_modules/core-js/modules/es.symbol.iterator.js"),__webpack_require__("./node_modules/core-js/modules/es.string.iterator.js"),__webpack_require__("./node_modules/core-js/modules/es.array.iterator.js"),__webpack_require__("./node_modules/core-js/modules/web.dom-collections.iterator.js"),__webpack_require__("./node_modules/core-js/modules/es.array.slice.js"),__webpack_require__("./node_modules/core-js/modules/es.array.from.js"),__webpack_require__("./node_modules/@storybook/addons/dist/esm/hooks.js"),["x-small","small","medium","large","x-large","xx-large"]),storybookSizeArgTypes={size:{options:storybookSizeOptions,control:{type:"inline-radio"}}}},"./storybook-init-framework-entry.js":function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__);__webpack_require__("./node_modules/@storybook/react/dist/esm/client/index.js")},0:function(module,exports,__webpack_require__){__webpack_require__("./node_modules/@storybook/core-client/dist/esm/globals/polyfills.js"),__webpack_require__("./node_modules/@storybook/core-client/dist/esm/globals/globals.js"),__webpack_require__("./storybook-init-framework-entry.js"),__webpack_require__("./node_modules/@storybook/addon-docs/dist/esm/frameworks/common/config.js-generated-config-entry.js"),__webpack_require__("./node_modules/@storybook/addon-docs/dist/esm/frameworks/react/config.js-generated-config-entry.js"),__webpack_require__("./node_modules/@storybook/react/dist/esm/client/preview/config-generated-config-entry.js"),__webpack_require__("./node_modules/@storybook/addon-links/dist/esm/preset/addDecorator.js-generated-config-entry.js"),__webpack_require__("./node_modules/@storybook/addon-actions/dist/esm/preset/addDecorator.js-generated-config-entry.js"),__webpack_require__("./node_modules/@storybook/addon-actions/dist/esm/preset/addArgs.js-generated-config-entry.js"),__webpack_require__("./node_modules/@storybook/addon-backgrounds/dist/esm/preset/addDecorator.js-generated-config-entry.js"),__webpack_require__("./node_modules/@storybook/addon-backgrounds/dist/esm/preset/addParameter.js-generated-config-entry.js"),__webpack_require__("./node_modules/@storybook/addon-measure/dist/esm/preset/addDecorator.js-generated-config-entry.js"),__webpack_require__("./node_modules/@storybook/addon-outline/dist/esm/preset/addDecorator.js-generated-config-entry.js"),__webpack_require__("./.storybook/preview.ts-generated-config-entry.js"),module.exports=__webpack_require__("./generated-stories-entry.js")},1:function(module,exports){}},[[0,4,5]]]);